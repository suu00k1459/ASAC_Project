{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyOeLowtXegZIJ+T0/xxwiXa"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RwagCnKPDtYY","executionInfo":{"status":"ok","timestamp":1718928571423,"user_tz":-540,"elapsed":88425,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"ef57db06-7636-48ef-817c-cc45419239ee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# 얼굴 탐지"],"metadata":{"id":"27M2etwnemM4"}},{"cell_type":"code","source":["import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","# 이미지 로드\n","image_path = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50002_00.jpg'\n","image = cv2.imread(image_path)\n","\n","# 이미지가 제대로 로드되었는지 확인\n","if image is None:\n","    print(f\"Error loading image at path: {image_path}\")\n","else:\n","    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n","\n","    # 얼굴 감지\n","    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","    # 얼굴 및 머리 영역 추출 및 시각화\n","    for (x, y, w, h) in faces:\n","        # 얼굴 중심과 반경 설정\n","        center_x, center_y = x + w // 2, y + h // 2\n","\n","\n","        # 너비와 높이에 각각 다른 배율 적용\n","        adjusted_w = int(2 * w)\n","        adjusted_h = int(1.5 * h)\n","\n","        # 타원형 마스크 생성\n","        mask = np.zeros_like(image)\n","        mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","        # 마스크 적용\n","        face_circle = np.zeros_like(image)\n","        face_circle[mask[:, :, 0] == 255] = image[mask[:, :, 0] == 255]\n","\n","        # 배경을 흰색으로 설정\n","        background = np.ones_like(image) * 255\n","        face_circle_with_bg = np.where(face_circle == 0, background, face_circle)\n","\n","        # 결과 시각화\n","        plt.figure()\n","        plt.imshow(cv2.cvtColor(face_circle_with_bg, cv2.COLOR_BGR2RGB))\n","        plt.axis('off')\n","        plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"gyH6u-viXHWy","executionInfo":{"status":"ok","timestamp":1718867324425,"user_tz":-540,"elapsed":1411,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"2811a6a4-c44d-41e7-c2b3-1c58c4a95b08"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","for i in range(50) :\n","    # 이미지 로드\n","    image_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/{50000+i}_00.jpg'\n","    image = cv2.imread(image_path)\n","\n","    # 이미지가 제대로 로드되었는지 확인\n","    if image is None:\n","        raise ValueError(f\"Error loading image at path: {image_path}\")\n","\n","    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","    gray = cv2.cvtColor(image_rgb, cv2.COLOR_RGB2GRAY)\n","\n","    # 얼굴 감지\n","    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","    # 얼굴 및 머리 영역 추출 및 시각화\n","    for (x, y, w, h) in faces:\n","        # 얼굴 중심과 반경 설정\n","        center_x, center_y = x + w // 2, y + h // 2\n","\n","        # 너비와 높이에 각각 다른 배율 적용\n","        adjusted_w = int(2 * w)\n","        adjusted_h = int(1.5 * h)\n","\n","        # 타원형 마스크 생성\n","        mask = np.zeros_like(image_rgb)\n","        mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","        # 마스크 적용하여 얼굴 부분 추출\n","        face_circle = np.zeros_like(image_rgb)\n","        face_circle[mask[:, :, 0] == 255] = image_rgb[mask[:, :, 0] == 255]\n","\n","        # 중앙을 기준으로 윗부분은 원본 이미지 유지\n","        face_circle_with_bg = face_circle.copy()\n","        face_circle_with_bg[:center_y, :] = image_rgb[:center_y, :]\n","\n","    # 결과 이미지 저장 (RGB 색상 공간으로 변환하여 저장)\n","    output_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/face/{50000+i}_00.jpg'\n","    cv2.imwrite(output_path, cv2.cvtColor(face_circle_with_bg, cv2.COLOR_RGB2BGR))"],"metadata":{"id":"0ydqow53ynxz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 얼굴 2개 이상따지는 사진 추출\n","\n","import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","for i in range(50) :\n","    # 이미지 로드\n","    image_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/{50000+i}_00.jpg'\n","    image = cv2.imread(image_path)\n","\n","    # 이미지가 제대로 로드되었는지 확인\n","    if image is None:\n","        raise ValueError(f\"Error loading image at path: {image_path}\")\n","\n","    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","    gray = cv2.cvtColor(image_rgb, cv2.COLOR_RGB2GRAY)\n","\n","    # 얼굴 감지\n","    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","    # 얼굴 및 머리 영역 추출 및 시각화\n","    if len(faces) > 1:\n","        fig, axes = plt.subplots(1, len(faces), figsize=(15, 5))\n","        for idx, (x, y, w, h) in enumerate(faces):\n","            # 얼굴 중심과 반경 설정\n","            center_x, center_y = x + w // 2, y + h // 2\n","\n","            # 너비와 높이에 각각 다른 배율 적용\n","            adjusted_w = int(2 * w)\n","            adjusted_h = int(1.5 * h)\n","\n","            # 타원형 마스크 생성\n","            mask = np.zeros_like(image_rgb)\n","            mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","            # 마스크 적용하여 얼굴 부분 추출\n","            face_circle = np.zeros_like(image_rgb)\n","            face_circle[mask[:, :, 0] == 255] = image_rgb[mask[:, :, 0] == 255]\n","\n","            # 각 얼굴을 서브플롯에 그리기\n","            axes[idx].imshow(face_circle)\n","            axes[idx].set_title(f\"Face {idx + 1}\")\n","            axes[idx].axis('off')\n","\n","        plt.show()\n","\n","    for (x, y, w, h) in faces:\n","        # 얼굴 중심과 반경 설정\n","        center_x, center_y = x + w // 2, y + h // 2\n","\n","        # 너비와 높이에 각각 다른 배율 적용\n","        adjusted_w = int(2 * w)\n","        adjusted_h = int(1.5 * h)\n","\n","        # 타원형 마스크 생성\n","        mask = np.zeros_like(image_rgb)\n","        mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","        # 마스크 적용하여 얼굴 부분 추출\n","        face_circle = np.zeros_like(image_rgb)\n","        face_circle[mask[:, :, 0] == 255] = image_rgb[mask[:, :, 0] == 255]\n","\n","        # 중앙을 기준으로 윗부분은 원본 이미지 유지\n","        face_circle_with_bg = face_circle.copy()\n","        face_circle_with_bg[:center_y, :] = image_rgb[:center_y, :]\n","\n","    # 결과 이미지 저장 (RGB 색상 공간으로 변환하여 저장)\n","    output_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/face/{50000+i}_01.jpg'\n","    cv2.imwrite(output_path, cv2.cvtColor(face_circle_with_bg, cv2.COLOR_RGB2BGR))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"jSlK4TAkItUu","executionInfo":{"status":"ok","timestamp":1718928869731,"user_tz":-540,"elapsed":31291,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"a7a0d57a-3c7b-4001-aed0-8d59d32729e7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"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SZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwlSZIkSb1mcJUkSZIk9ZrBVZIkSZLUawZXSZIkSVKvGVwl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\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"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KkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6jTDVZIkSZLUaYarJEmSJKnTDFdJkiRJUqcZrpIkSZKkTjNcJUmSJEmdZrhKkiRJkjrNcJUkSZIkdZrhKkmSJEnqNMNVkiRJktRphqskSZIkqdMMV0mSJElSpxmukiRJkqROM1wlSZIkSZ1muEqSJEmSOs1wlSRJkiR1muEqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6rSQc85X+kFIkiRJkvT5OOIqSZIkSeo0w1WSJEmS1GmGqyRJkiSp0wxXSZIkSVKnGa6SJEmSpE4zXCVJkiRJnWa4SpIkSZI6zXCVJEmSJHWa4SpJkiRJ6rT/PypSXiwmWh0IAAAAAElFTkSuQmCC\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 얼굴이 2개 이상 감지되는 사진의 경우, 얼굴 위치가 가장 높은 것을 기준으로 얼굴 감지\n","\n","import cv2\n","import numpy as np\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","for i in range(50) :\n","    # 이미지 로드\n","    image_path = f'/content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_{i}.jpg'\n","    image = cv2.imread(image_path)\n","\n","    # 이미지가 제대로 로드되었는지 확인\n","    if image is None:\n","        print(f\"Error loading image at path: {image_path}\")\n","        continue\n","\n","    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","    gray = cv2.cvtColor(image_rgb, cv2.COLOR_RGB2GRAY)\n","\n","    # 얼굴 감지\n","    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","    if len(faces) > 0:\n","        # 얼굴 위치가 가장 높은 것을 찾기\n","        highest_face = min(faces, key=lambda rect: rect[1])\n","        x, y, w, h = highest_face\n","\n","        # 얼굴 중심과 반경 설정\n","        center_x, center_y = x + w // 2, y + h // 2\n","\n","        # 너비와 높이에 각각 다른 배율 적용\n","        adjusted_w = int(2 * w)\n","        adjusted_h = int(1.5 * h)\n","\n","        # 타원형 마스크 생성\n","        mask = np.zeros_like(image_rgb)\n","        mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","        # 중앙을 기준으로 윗부분은 원본 이미지 유지, 아랫부분은 검정색으로 변경\n","        face_circle_with_bg = image_rgb.copy()\n","        face_circle_with_bg[center_y:, :] = 0\n","\n","        # 타원 부분은 원본 이미지 유지\n","        face_circle_with_bg[mask[:, :, 0] == 255] = image_rgb[mask[:, :, 0] == 255]\n","\n","        # 결과 이미지 저장 (RGB 색상 공간으로 변환하여 저장)\n","        output_path = f'/content/drive/MyDrive/DLproject/wedding_dress/mini_dress/face/{100000+i}_00.jpg'\n","        cv2.imwrite(output_path, cv2.cvtColor(face_circle_with_bg, cv2.COLOR_RGB2BGR))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3pEKcXR9JxFB","executionInfo":{"status":"ok","timestamp":1718934711132,"user_tz":-540,"elapsed":31236,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"479d9cbc-c5f3-404b-b116-4253a80943db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_0.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_41.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_42.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_43.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_44.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_45.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_46.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_47.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_48.jpg\n","Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_49.jpg\n"]}]},{"cell_type":"markdown","source":["# 사람 탐지"],"metadata":{"id":"cu8bAnu8epU_"}},{"cell_type":"code","source":["!pip install torch torchvision"],"metadata":{"id":"z6PQ60YVfALQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718931491073,"user_tz":-540,"elapsed":88303,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"4bc15664-5a43-40f9-fe2d-3e3e64d1ab33"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.3.0+cu121)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (0.18.0+cu121)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.15.1)\n","Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.12.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.4)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2023.6.0)\n","Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch)\n","  Using cached nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n","Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch)\n","  Using cached nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch)\n","  Using cached nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n","Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch)\n","  Using cached nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)\n","Collecting nvidia-cublas-cu12==12.1.3.1 (from torch)\n","  Using cached nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n","Collecting nvidia-cufft-cu12==11.0.2.54 (from torch)\n","  Using cached nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n","Collecting nvidia-curand-cu12==10.3.2.106 (from torch)\n","  Using cached nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n","Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch)\n","  Using cached nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n","Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch)\n","  Using cached nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n","Collecting nvidia-nccl-cu12==2.20.5 (from torch)\n","  Using cached nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl (176.2 MB)\n","Collecting nvidia-nvtx-cu12==12.1.105 (from torch)\n","  Using cached nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n","Requirement already satisfied: triton==2.3.0 in /usr/local/lib/python3.10/dist-packages (from torch) (2.3.0)\n","Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch)\n","  Downloading nvidia_nvjitlink_cu12-12.5.40-py3-none-manylinux2014_x86_64.whl (21.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.3/21.3 MB\u001b[0m \u001b[31m51.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torchvision) (1.25.2)\n","Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision) (9.4.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.5)\n","Requirement already satisfied: mpmath<1.4.0,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n","Installing collected packages: nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12\n","Successfully installed nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.20.5 nvidia-nvjitlink-cu12-12.5.40 nvidia-nvtx-cu12-12.1.105\n"]}]},{"cell_type":"code","source":["import torch\n","import torchvision\n","from torchvision.models.detection import maskrcnn_resnet50_fpn\n","import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# 사전 학습된 Mask R-CNN 모델 로드\n","model = maskrcnn_resnet50_fpn(pretrained=True)\n","model.eval()  # 모델을 평가 모드로 설정"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"vDhDuI4Ka7av","executionInfo":{"status":"ok","timestamp":1718931507844,"user_tz":-540,"elapsed":16781,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"1344d2fa-d36a-47e8-f85b-32da550b01dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=MaskRCNN_ResNet50_FPN_Weights.COCO_V1`. You can also use `weights=MaskRCNN_ResNet50_FPN_Weights.DEFAULT` to get the most up-to-date weights.\n","  warnings.warn(msg)\n","Downloading: \"https://download.pytorch.org/models/maskrcnn_resnet50_fpn_coco-bf2d0c1e.pth\" to /root/.cache/torch/hub/checkpoints/maskrcnn_resnet50_fpn_coco-bf2d0c1e.pth\n","100%|██████████| 170M/170M [00:02<00:00, 63.4MB/s]\n"]},{"output_type":"execute_result","data":{"text/plain":["MaskRCNN(\n","  (transform): GeneralizedRCNNTransform(\n","      Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n","      Resize(min_size=(800,), max_size=1333, mode='bilinear')\n","  )\n","  (backbone): BackboneWithFPN(\n","    (body): IntermediateLayerGetter(\n","      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n","      (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","      (relu): ReLU(inplace=True)\n","      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n","      (layer1): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(256, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","            (1): FrozenBatchNorm2d(256, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(256, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(256, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","      (layer2): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","            (1): FrozenBatchNorm2d(512, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (3): Bottleneck(\n","          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","      (layer3): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","            (1): FrozenBatchNorm2d(1024, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (3): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (4): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (5): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","      (layer4): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(2048, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","            (1): FrozenBatchNorm2d(2048, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(2048, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(2048, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","    )\n","    (fpn): FeaturePyramidNetwork(\n","      (inner_blocks): ModuleList(\n","        (0): Conv2dNormActivation(\n","          (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","        (1): Conv2dNormActivation(\n","          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","        (2): Conv2dNormActivation(\n","          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","        (3): Conv2dNormActivation(\n","          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","      )\n","      (layer_blocks): ModuleList(\n","        (0-3): 4 x Conv2dNormActivation(\n","          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        )\n","      )\n","      (extra_blocks): LastLevelMaxPool()\n","    )\n","  )\n","  (rpn): RegionProposalNetwork(\n","    (anchor_generator): AnchorGenerator()\n","    (head): RPNHead(\n","      (conv): Sequential(\n","        (0): Conv2dNormActivation(\n","          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","          (1): ReLU(inplace=True)\n","        )\n","      )\n","      (cls_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))\n","      (bbox_pred): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))\n","    )\n","  )\n","  (roi_heads): RoIHeads(\n","    (box_roi_pool): MultiScaleRoIAlign(featmap_names=['0', '1', '2', '3'], output_size=(7, 7), sampling_ratio=2)\n","    (box_head): TwoMLPHead(\n","      (fc6): Linear(in_features=12544, out_features=1024, bias=True)\n","      (fc7): Linear(in_features=1024, out_features=1024, bias=True)\n","    )\n","    (box_predictor): FastRCNNPredictor(\n","      (cls_score): Linear(in_features=1024, out_features=91, bias=True)\n","      (bbox_pred): Linear(in_features=1024, out_features=364, bias=True)\n","    )\n","    (mask_roi_pool): MultiScaleRoIAlign(featmap_names=['0', '1', '2', '3'], output_size=(14, 14), sampling_ratio=2)\n","    (mask_head): MaskRCNNHeads(\n","      (0): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","      (1): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","      (2): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","      (3): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","    )\n","    (mask_predictor): MaskRCNNPredictor(\n","      (conv5_mask): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))\n","      (relu): ReLU(inplace=True)\n","      (mask_fcn_logits): Conv2d(256, 91, kernel_size=(1, 1), stride=(1, 1))\n","    )\n","  )\n",")"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["for i in range(600) :\n","    # 이미지 로드 및 전처리\n","    image_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/{50000+i}_00.jpg'\n","    image = cv2.imread(image_path)\n","\n","    # 이미지가 제대로 로드되었는지 확인\n","    if image is None:\n","        print(f\"Error loading image at path: {image_path}\")\n","        continue\n","\n","    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","    image_tensor = torchvision.transforms.functional.to_tensor(image_rgb).unsqueeze(0)\n","\n","    # 모델 예측 수행\n","    with torch.no_grad():\n","        prediction = model(image_tensor)[0]\n","\n","    # 결과 확인 (마스크와 클래스 ID 추출)\n","    masks = prediction['masks'].cpu().numpy()\n","    labels = prediction['labels'].cpu().numpy()\n","    scores = prediction['scores'].cpu().numpy()\n","\n","    # 클래스 ID가 1인 마스크 필터링 (예: 사람)\n","    person_mask = np.zeros((image_rgb.shape[0], image_rgb.shape[1]), dtype=np.uint8)\n","    for i in range(masks.shape[0]):\n","        if labels[i] == 1 and scores[i] > 0.5:  # 신뢰도가 0.5 이상인 경우만 사용\n","            clothes_mask = np.maximum(person_mask, masks[i, 0])\n","\n","    # 마스크 확장\n","    kernel = np.ones((30, 30), np.uint8)  # 커널 크기를 조정하여 확장 범위 조절\n","    dilated_mask = cv2.dilate(person_mask, kernel, iterations=1)\n","\n","    # 확장된 영역을 회색으로 채우기\n","    gray_color = (128, 128, 128)  # 회색 (808080)\n","    gray_area = np.full_like(image_rgb, gray_color)\n","\n","    result = image_rgb.copy()\n","    result[dilated_mask > 0.5] = gray_area[dilated_mask > 0.5]\n","\n","    # clothes_mask를 3차원 배열로 확장\n","    #clothes_mask_3d = np.repeat(clothes_mask[:, :, np.newaxis], 3, axis=2)\n","\n","    # 원본 이미지에서 옷 부분만 추출\n","    #clothes_image = image_rgb.copy()\n","    #clothes_image[clothes_mask_3d < 0.5] = 0  # 마스크가 0.5 미만인 부분은 검정색으로 처리\n","\n","    # 결과 이미지 저장\n","    output_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/gray/{50000+i}_00.jpg'\n","    cv2.imwrite(output_path, cv2.cvtColor(result, cv2.COLOR_RGB2BGR))"],"metadata":{"id":"xHpj1OwffGnZ","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"error","timestamp":1718931829164,"user_tz":-540,"elapsed":59451,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"d9cba9f5-7228-489c-c7b8-30b99debc954"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-17ccce4e164d>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m     \u001b[0;31m# 모델 예측 수행\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mno_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m         \u001b[0mprediction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage_tensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[0;31m# 결과 확인 (마스크와 클래스 ID 추출)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/models/detection/generalized_rcnn.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, images, targets)\u001b[0m\n\u001b[1;32m     99\u001b[0m                     )\n\u001b[1;32m    100\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 101\u001b[0;31m         \u001b[0mfeatures\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackbone\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimages\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtensors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    102\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    103\u001b[0m             \u001b[0mfeatures\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mOrderedDict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"0\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeatures\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/models/detection/backbone_utils.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     56\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mDict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m         \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbody\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m         \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfpn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/ops/feature_pyramid_network.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    194\u001b[0m             \u001b[0minner_top_down\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mF\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minterpolate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlast_inner\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfeat_shape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"nearest\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    195\u001b[0m             \u001b[0mlast_inner\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minner_lateral\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0minner_top_down\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 196\u001b[0;31m             \u001b[0mresults\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minsert\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_result_from_layer_blocks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlast_inner\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    197\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextra_blocks\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/ops/feature_pyramid_network.py\u001b[0m in \u001b[0;36mget_result_from_layer_blocks\u001b[0;34m(self, x, idx)\u001b[0m\n\u001b[1;32m    167\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayer_blocks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    168\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mi\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 169\u001b[0;31m                 \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    170\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/container.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m             \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/conv.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 460\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_conv_forward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbias\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    461\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    462\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0mConv3d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_ConvNd\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/conv.py\u001b[0m in \u001b[0;36m_conv_forward\u001b[0;34m(self, input, weight, bias)\u001b[0m\n\u001b[1;32m    454\u001b[0m                             \u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbias\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstride\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    455\u001b[0m                             _pair(0), self.dilation, self.groups)\n\u001b[0;32m--> 456\u001b[0;31m         return F.conv2d(input, weight, bias, self.stride,\n\u001b[0m\u001b[1;32m    457\u001b[0m                         self.padding, self.dilation, self.groups)\n\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["for i in range(50) :\n","    # 이미지 로드 및 전처리\n","    image_path = f'/content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_{i}.jpg'\n","    image = cv2.imread(image_path)\n","\n","    # 이미지가 제대로 로드되었는지 확인\n","    if image is None:\n","        print(f\"Error loading image at path: {image_path}\")\n","        continue\n","\n","    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","    image_tensor = torchvision.transforms.functional.to_tensor(image_rgb).unsqueeze(0)\n","\n","    # 모델 예측 수행\n","    with torch.no_grad():\n","        prediction = model(image_tensor)[0]\n","\n","    # 결과 확인 (마스크와 클래스 ID 추출)\n","    masks = prediction['masks'].cpu().numpy()\n","    labels = prediction['labels'].cpu().numpy()\n","    scores = prediction['scores'].cpu().numpy()\n","\n","    # 클래스 ID가 1인 마스크 필터링 (예: 사람)\n","    person_mask = np.zeros((image_rgb.shape[0], image_rgb.shape[1]), dtype=np.uint8)\n","    for j in range(masks.shape[0]):\n","        if labels[j] == 1 and scores[j] > 0.5:  # 신뢰도가 0.5 이상인 경우만 사용\n","            person_mask = np.maximum(person_mask, masks[j, 0])\n","\n","    # 마스크 확장\n","    kernel = np.ones((30, 30), np.uint8)  # 커널 크기를 조정하여 확장 범위 조절\n","    dilated_mask = cv2.dilate(person_mask, kernel, iterations=1)\n","\n","    # 확장된 영역과 그 안에 모든 부분을 회색으로 채우기\n","    gray_color = (128, 128, 128)  # 회색 (808080)\n","    gray_image = np.full_like(image_rgb, gray_color, dtype=np.uint8)\n","\n","    result = image_rgb.copy()\n","    result[dilated_mask > 0.5] = gray_image[dilated_mask > 0.5]\n","\n","    # 결과 이미지 저장\n","    output_path = f'/content/drive/MyDrive/DLproject/wedding_dress/mini_dress/gray/{100000+i}_00.jpg'\n","    cv2.imwrite(output_path, cv2.cvtColor(result, cv2.COLOR_RGB2BGR))"],"metadata":{"id":"efDFfUA5gpxD","colab":{"base_uri":"https://localhost:8080/","height":373},"executionInfo":{"status":"error","timestamp":1718934919494,"user_tz":-540,"elapsed":151525,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"3410929a-ec9d-48a8-c7c9-963cfbee35ff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Error loading image at path: /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/mini_image/image_0.jpg\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-25-466e3a561bd9>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m     \u001b[0;31m# 모델 예측 수행\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mno_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m         \u001b[0mprediction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage_tensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[0;31m# 결과 확인 (마스크와 클래스 ID 추출)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/models/detection/generalized_rcnn.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, images, targets)\u001b[0m\n\u001b[1;32m    102\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    103\u001b[0m             \u001b[0mfeatures\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mOrderedDict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"0\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeatures\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 104\u001b[0;31m         \u001b[0mproposals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mproposal_losses\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrpn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimages\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeatures\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtargets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    105\u001b[0m         \u001b[0mdetections\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdetector_losses\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mroi_heads\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mproposals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimages\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage_sizes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtargets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    106\u001b[0m         \u001b[0mdetections\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpostprocess\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdetections\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimages\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage_sizes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moriginal_image_sizes\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[operator]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/models/detection/rpn.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, images, features, targets)\u001b[0m\n\u001b[1;32m    359\u001b[0m         \u001b[0;31m# RPN uses all feature maps that are available\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    360\u001b[0m         \u001b[0mfeatures\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 361\u001b[0;31m         \u001b[0mobjectness\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpred_bbox_deltas\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    362\u001b[0m         \u001b[0manchors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0manchor_generator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimages\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeatures\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    363\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/models/detection/rpn.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     73\u001b[0m         \u001b[0mbbox_reg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mfeature\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 75\u001b[0;31m             \u001b[0mt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeature\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     76\u001b[0m             \u001b[0mlogits\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcls_logits\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     77\u001b[0m             \u001b[0mbbox_reg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbbox_pred\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/container.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m             \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/container.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m             \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1530\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1531\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1532\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1533\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1534\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1540\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1541\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1543\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/conv.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 460\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_conv_forward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbias\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    461\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    462\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0mConv3d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_ConvNd\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/conv.py\u001b[0m in \u001b[0;36m_conv_forward\u001b[0;34m(self, input, weight, bias)\u001b[0m\n\u001b[1;32m    454\u001b[0m                             \u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbias\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstride\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    455\u001b[0m                             _pair(0), self.dilation, self.groups)\n\u001b[0;32m--> 456\u001b[0;31m         return F.conv2d(input, weight, bias, self.stride,\n\u001b[0m\u001b[1;32m    457\u001b[0m                         self.padding, self.dilation, self.groups)\n\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","source":["# 결과"],"metadata":{"id":"w0ZhUorrjz3e"}},{"cell_type":"code","source":["# 이미지 로드 및 전처리\n","image_path = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50002_00.jpg'\n","image = cv2.imread(image_path)\n","\n","# 이미지가 제대로 로드되었는지 확인\n","if image is None:\n","    raise ValueError(f\"Error loading image at path: {image_path}\")\n","\n","image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","image_tensor = torchvision.transforms.functional.to_tensor(image_rgb).unsqueeze(0)\n","\n","# 모델 예측 수행\n","with torch.no_grad():\n","    prediction = model(image_tensor)[0]\n","\n","# 결과 확인 (마스크와 클래스 ID 추출)\n","masks = prediction['masks'].cpu().numpy()\n","labels = prediction['labels'].cpu().numpy()\n","scores = prediction['scores'].cpu().numpy()\n","\n","# 클래스 ID가 1인 마스크 필터링 (예: 사람)\n","person_mask = np.zeros((image_rgb.shape[0], image_rgb.shape[1]), dtype=np.uint8)\n","for i in range(masks.shape[0]):\n","    if labels[i] == 1 and scores[i] > 0.5:  # 신뢰도가 0.5 이상인 경우만 사용\n","        person_mask = np.maximum(person_mask, masks[i, 0])\n","\n","# 마스크 확장\n","kernel = np.ones((30, 30), np.uint8)  # 커널 크기를 조정하여 확장 범위 조절\n","dilated_mask = cv2.dilate(person_mask, kernel, iterations=1)\n","\n","# 확장된 영역과 그 안에 모든 부분을 회색으로 채우기\n","gray_color = (128, 128, 128)  # 회색 (808080)\n","gray_image = np.full_like(image_rgb, gray_color, dtype=np.uint8)\n","\n","result = image_rgb.copy()\n","result[dilated_mask > 0.5] = gray_image[dilated_mask > 0.5]\n","\n","# 결과 이미지 저장 및 시각화\n","output_path_gray = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/cloth/50002_02.jpg'\n","cv2.imwrite(output_path_gray, cv2.cvtColor(result, cv2.COLOR_RGB2BGR))\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","# 회색 이미지 로드\n","gray_image_path = output_path_gray\n","gray_image_loaded = cv2.imread(gray_image_path)\n","\n","# 이미지가 제대로 로드되었는지 확인\n","if gray_image_loaded is None:\n","    raise ValueError(f\"Error loading image at path: {gray_image_path}\")\n","\n","gray_image_rgb = cv2.cvtColor(gray_image_loaded, cv2.COLOR_BGR2RGB)\n","gray = cv2.cvtColor(gray_image_rgb, cv2.COLOR_RGB2GRAY)\n","\n","# 얼굴 감지\n","faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","# 얼굴 및 머리 영역 추출 및 원본으로 복원\n","final_result = gray_image_rgb.copy()  # final_result 초기화\n","for (x, y, w, h) in faces:\n","    # 얼굴 중심과 반경 설정\n","    center_x, center_y = x + w // 2, y + h // 2\n","\n","    # 너비와 높이에 각각 다른 배율 적용\n","    adjusted_w = int(2 * w)\n","    adjusted_h = int(1.5 * h)\n","\n","    # 타원형 마스크 생성\n","    mask = np.zeros_like(gray_image_rgb)\n","    mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","    # 얼굴 부분을 원본 이미지로 복원\n","    face_restored = np.where(mask == 255, image_rgb, gray_image_rgb)\n","\n","    # 얼굴 부분의 위쪽 중에서 회색으로 칠해진 부분을 원본으로 복원\n","    top_mask = np.zeros_like(gray_image_rgb)\n","    top_mask[:center_y, :] = mask[:center_y, :]\n","\n","    final_result = np.where(top_mask == 255, image_rgb, face_restored)\n","\n","# 결과 이미지 저장 및 시각화\n","output_path_restored = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/cloth/50002_03.jpg'\n","cv2.imwrite(output_path_restored, cv2.cvtColor(final_result, cv2.COLOR_RGB2BGR))\n","\n","plt.figure(figsize=(10, 10))\n","plt.imshow(cv2.cvtColor(final_result, cv2.COLOR_RGB2BGR))\n","plt.axis('off')\n","plt.show()"],"metadata":{"id":"jJxX6C2gj1Cf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 이미지 로드 및 전처리\n","image_path = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50002_00.jpg'\n","image = cv2.imread(image_path)\n","\n","# 이미지가 제대로 로드되었는지 확인\n","if image is None:\n","    raise ValueError(f\"Error loading image at path: {image_path}\")\n","\n","image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","image_tensor = torchvision.transforms.functional.to_tensor(image_rgb).unsqueeze(0)\n","\n","# 모델 예측 수행\n","with torch.no_grad():\n","    prediction = model(image_tensor)[0]\n","\n","# 결과 확인 (마스크와 클래스 ID 추출)\n","masks = prediction['masks'].cpu().numpy()\n","labels = prediction['labels'].cpu().numpy()\n","scores = prediction['scores'].cpu().numpy()\n","\n","# 클래스 ID가 1인 마스크 필터링 (예: 사람)\n","person_mask = np.zeros((image_rgb.shape[0], image_rgb.shape[1]), dtype=np.uint8)\n","for i in range(masks.shape[0]):\n","    if labels[i] == 1 and scores[i] > 0.5:  # 신뢰도가 0.5 이상인 경우만 사용\n","        person_mask = np.maximum(person_mask, masks[i, 0])\n","\n","# 마스크 확장\n","kernel = np.ones((30, 30), np.uint8)  # 커널 크기를 조정하여 확장 범위 조절\n","dilated_mask = cv2.dilate(person_mask, kernel, iterations=1)\n","\n","# 확장된 영역과 그 안에 모든 부분을 회색으로 채우기\n","gray_color = (128, 128, 128)  # 회색 (808080)\n","gray_image = np.full_like(image_rgb, gray_color, dtype=np.uint8)\n","\n","result = image_rgb.copy()\n","result[dilated_mask > 0.5] = gray_image[dilated_mask > 0.5]\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","# 이미지가 제대로 로드되었는지 확인\n","if result is None:\n","    raise ValueError(f\"Error loading image\")\n","\n","gray = cv2.cvtColor(result, cv2.COLOR_RGB2GRAY)\n","\n","# 얼굴 감지\n","faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","# 얼굴 및 머리 영역 추출 및 원본으로 복원\n","final_result = result.copy()  # final_result 초기화\n","for (x, y, w, h) in faces:\n","    # 얼굴 중심과 반경 설정\n","    center_x, center_y = x + w // 2, y + h // 2\n","\n","    # 너비와 높이에 각각 다른 배율 적용\n","    adjusted_w = int(2 * w)\n","    adjusted_h = int(1.5 * h)\n","\n","    # 타원형 마스크 생성\n","    mask = np.zeros_like(result)\n","    mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","    # 얼굴 부분을 원본 이미지로 복원\n","    face_restored = np.where(mask == 255, image_rgb, final_result)\n","\n","    # 얼굴 부분의 위쪽 중에서 회색으로 칠해진 부분을 원본으로 복원\n","    top_mask = np.zeros_like(result)\n","    top_mask[:center_y, :] = mask[:center_y, :]\n","\n","    final_result = np.where(top_mask == 255, image_rgb, face_restored)\n","\n","# 결과 이미지 저장 및 시각화\n","output_path_restored = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/cloth/50002_05.jpg'\n","cv2.imwrite(output_path_restored, cv2.cvtColor(final_result, cv2.COLOR_RGB2BGR))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cjRMWTGokMgE","executionInfo":{"status":"ok","timestamp":1718869573439,"user_tz":-540,"elapsed":10682,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"bba189c3-b371-4234-a9a8-e5ca151ad3cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["import torch\n","import torchvision\n","from torchvision.models.detection import maskrcnn_resnet50_fpn\n","import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# 사전 학습된 Mask R-CNN 모델 로드\n","model = maskrcnn_resnet50_fpn(pretrained=True)\n","model.eval()\n","\n","# 이미지 로드 및 전처리\n","image_path = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50002_00.jpg'\n","image = cv2.imread(image_path)\n","\n","# 이미지가 제대로 로드되었는지 확인\n","if image is None:\n","    raise ValueError(f\"Error loading image at path: {image_path}\")\n","\n","image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","image_tensor = torchvision.transforms.functional.to_tensor(image_rgb).unsqueeze(0)\n","\n","# 모델 예측 수행\n","with torch.no_grad():\n","    prediction = model(image_tensor)[0]\n","\n","# 결과 확인 (마스크와 클래스 ID 추출)\n","masks = prediction['masks'].cpu().numpy()\n","labels = prediction['labels'].cpu().numpy()\n","scores = prediction['scores'].cpu().numpy()\n","\n","# 클래스 ID가 1인 마스크 필터링 (예: 사람)\n","person_mask = np.zeros((image_rgb.shape[0], image_rgb.shape[1]), dtype=np.uint8)\n","for i in range(masks.shape[0]):\n","    if labels[i] == 1 and scores[i] > 0.5:  # 신뢰도가 0.5 이상인 경우만 사용\n","        person_mask = np.maximum(person_mask, masks[i, 0])\n","\n","# 마스크 확장\n","kernel = np.ones((30, 30), np.uint8)  # 커널 크기를 조정하여 확장 범위 조절\n","dilated_mask = cv2.dilate(person_mask, kernel, iterations=1)\n","\n","# 확장된 영역과 그 안에 모든 부분을 회색으로 채우기\n","gray_color = (128, 128, 128)  # 회색 (808080)\n","gray_image = np.full_like(image_rgb, gray_color, dtype=np.uint8)\n","\n","result = image_rgb.copy()\n","result[dilated_mask > 0.5] = gray_image[dilated_mask > 0.5]\n","\n","# 얼굴 탐지 및 원본으로 복원\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","gray = cv2.cvtColor(result, cv2.COLOR_RGB2GRAY)\n","\n","# 얼굴 감지\n","faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","# 얼굴 및 머리 영역 추출 및 시각화\n","face_mask = np.zeros_like(image)\n","for (x, y, w, h) in faces:\n","    # 얼굴 중심과 반경 설정\n","    center_x, center_y = x + w // 2, y + h // 2\n","\n","    # 너비와 높이에 각각 다른 배율 적용\n","    adjusted_w = int(2 * w)\n","    adjusted_h = int(1.5 * h)\n","\n","    # 타원형 마스크 생성\n","    mask = np.zeros_like(image)\n","    mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","    # 마스크 적용하여 얼굴 부분 추출\n","    face_circle = np.zeros_like(image)\n","    face_circle[mask[:, :, 0] == 255] = image[mask[:, :, 0] == 255]\n","    face_mask[mask[:, :, 0] == 255] = image[mask[:, :, 0] == 255]\n","\n","# 회색 이미지와 얼굴 영역을 덮어쓰기\n","result = gray_image.copy()\n","result[face_mask[:, :, 0] != 0] = face_mask[face_mask[:, :, 0] != 0]\n","\n","# 결과 이미지 저장 및 시각화\n","output_path_restored = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/cloth/50002_06.jpg'\n","cv2.imwrite(output_path_restored, cv2.cvtColor(final_result, cv2.COLOR_RGB2BGR))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"43r-RQyfnBOu","executionInfo":{"status":"ok","timestamp":1718870210593,"user_tz":-540,"elapsed":11084,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"4d547592-6480-4a30-cdf9-5440de7ffd72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","source":["# 결합"],"metadata":{"id":"Ps-Jidzx0bfG"}},{"cell_type":"code","source":["import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","# 기존 이미지 로드\n","original_image_path = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50002_00.jpg'  # 업로드한 이미지 경로로 수정\n","original_image = cv2.imread(original_image_path)\n","\n","# 회색 이미지 로드\n","gray_image_path = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/cloth/50002_05.jpg'  # 업로드한 회색 이미지 경로로 수정\n","gray_image = cv2.imread(gray_image_path)\n","\n","# 이미지가 제대로 로드되었는지 확인\n","if original_image is None or gray_image is None:\n","    raise ValueError(f\"Error loading image at path: {original_image_path} or {gray_image_path}\")\n","\n","# 원본 이미지를 RGB로 변환\n","original_image_rgb = cv2.cvtColor(original_image, cv2.COLOR_BGR2RGB)\n","gray_image_rgb = cv2.cvtColor(gray_image, cv2.COLOR_BGR2RGB)\n","\n","# 얼굴 감지\n","gray = cv2.cvtColor(original_image_rgb, cv2.COLOR_RGB2GRAY)\n","faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","# 얼굴 및 머리 영역 추출 및 시각화\n","face_mask = np.zeros_like(original_image_rgb)\n","for (x, y, w, h) in faces:\n","    # 얼굴 중심과 반경 설정\n","    center_x, center_y = x + w // 2, y + h // 2\n","\n","    # 너비와 높이에 각각 다른 배율 적용\n","    adjusted_w = int(2 * w)\n","    adjusted_h = int(1.5 * h)\n","\n","    # 타원형 마스크 생성\n","    mask = np.zeros_like(original_image_rgb)\n","    mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","    # 마스크 적용하여 얼굴 부분 추출\n","    face_circle = np.zeros_like(original_image_rgb)\n","    face_circle[mask[:, :, 0] == 255] = original_image_rgb[mask[:, :, 0] == 255]\n","\n","    # 중앙을 기준으로 윗부분과 얼굴 마스크 영역 원본 이미지 유지\n","    gray_image_rgb[:center_y, :] = original_image_rgb[:center_y, :]\n","    gray_image_rgb[mask[:, :, 0] == 255] = original_image_rgb[mask[:, :, 0] == 255]\n","\n","# 결과 이미지 저장 (RGB 색상 공간으로 변환하여 저장)\n","output_path = '/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/cloth/50002_100.jpg'\n","cv2.imwrite(output_path, cv2.cvtColor(gray_image_rgb, cv2.COLOR_RGB2BGR))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ORDCi2rvoObn","executionInfo":{"status":"ok","timestamp":1718872992256,"user_tz":-540,"elapsed":504,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"bb076df7-1ef5-4486-bbfe-ac77057b573f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","source":["# 최종"],"metadata":{"id":"xI9jTaZoHg5V"}},{"cell_type":"code","source":["import torch\n","import torchvision\n","from torchvision.models.detection import maskrcnn_resnet50_fpn\n","import cv2\n","import numpy as np\n","import os\n","\n","# 사전 학습된 Mask R-CNN 모델 로드\n","model = maskrcnn_resnet50_fpn(pretrained=True)\n","model.eval()  # 모델을 평가 모드로 설정"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SkVhN4-7HuTD","executionInfo":{"status":"ok","timestamp":1718934532538,"user_tz":-540,"elapsed":1375,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"19e1dd35-02d8-4d47-d883-eba5effeedc4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=MaskRCNN_ResNet50_FPN_Weights.COCO_V1`. You can also use `weights=MaskRCNN_ResNet50_FPN_Weights.DEFAULT` to get the most up-to-date weights.\n","  warnings.warn(msg)\n"]},{"output_type":"execute_result","data":{"text/plain":["MaskRCNN(\n","  (transform): GeneralizedRCNNTransform(\n","      Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n","      Resize(min_size=(800,), max_size=1333, mode='bilinear')\n","  )\n","  (backbone): BackboneWithFPN(\n","    (body): IntermediateLayerGetter(\n","      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n","      (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","      (relu): ReLU(inplace=True)\n","      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n","      (layer1): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(256, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","            (1): FrozenBatchNorm2d(256, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(256, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(64, eps=0.0)\n","          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(256, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","      (layer2): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","            (1): FrozenBatchNorm2d(512, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (3): Bottleneck(\n","          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(128, eps=0.0)\n","          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(512, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","      (layer3): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","            (1): FrozenBatchNorm2d(1024, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (3): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (4): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (5): Bottleneck(\n","          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(256, eps=0.0)\n","          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(1024, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","      (layer4): Sequential(\n","        (0): Bottleneck(\n","          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(2048, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","          (downsample): Sequential(\n","            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","            (1): FrozenBatchNorm2d(2048, eps=0.0)\n","          )\n","        )\n","        (1): Bottleneck(\n","          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(2048, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","        (2): Bottleneck(\n","          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn1): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          (bn2): FrozenBatchNorm2d(512, eps=0.0)\n","          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (bn3): FrozenBatchNorm2d(2048, eps=0.0)\n","          (relu): ReLU(inplace=True)\n","        )\n","      )\n","    )\n","    (fpn): FeaturePyramidNetwork(\n","      (inner_blocks): ModuleList(\n","        (0): Conv2dNormActivation(\n","          (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","        (1): Conv2dNormActivation(\n","          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","        (2): Conv2dNormActivation(\n","          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","        (3): Conv2dNormActivation(\n","          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))\n","        )\n","      )\n","      (layer_blocks): ModuleList(\n","        (0-3): 4 x Conv2dNormActivation(\n","          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        )\n","      )\n","      (extra_blocks): LastLevelMaxPool()\n","    )\n","  )\n","  (rpn): RegionProposalNetwork(\n","    (anchor_generator): AnchorGenerator()\n","    (head): RPNHead(\n","      (conv): Sequential(\n","        (0): Conv2dNormActivation(\n","          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","          (1): ReLU(inplace=True)\n","        )\n","      )\n","      (cls_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))\n","      (bbox_pred): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))\n","    )\n","  )\n","  (roi_heads): RoIHeads(\n","    (box_roi_pool): MultiScaleRoIAlign(featmap_names=['0', '1', '2', '3'], output_size=(7, 7), sampling_ratio=2)\n","    (box_head): TwoMLPHead(\n","      (fc6): Linear(in_features=12544, out_features=1024, bias=True)\n","      (fc7): Linear(in_features=1024, out_features=1024, bias=True)\n","    )\n","    (box_predictor): FastRCNNPredictor(\n","      (cls_score): Linear(in_features=1024, out_features=91, bias=True)\n","      (bbox_pred): Linear(in_features=1024, out_features=364, bias=True)\n","    )\n","    (mask_roi_pool): MultiScaleRoIAlign(featmap_names=['0', '1', '2', '3'], output_size=(14, 14), sampling_ratio=2)\n","    (mask_head): MaskRCNNHeads(\n","      (0): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","      (1): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","      (2): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","      (3): Conv2dNormActivation(\n","        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","        (1): ReLU(inplace=True)\n","      )\n","    )\n","    (mask_predictor): MaskRCNNPredictor(\n","      (conv5_mask): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))\n","      (relu): ReLU(inplace=True)\n","      (mask_fcn_logits): Conv2d(256, 91, kernel_size=(1, 1), stride=(1, 1))\n","    )\n","  )\n",")"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","for i in range(3,600):\n","    # 기존 이미지 로드\n","    original_image_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/{50000+i}_00.jpg'\n","\n","    # 이미지 파일이 존재하는지 확인\n","    if not os.path.exists(original_image_path):\n","        print(f\"File {original_image_path} does not exist.\")\n","        continue\n","\n","    original_image = cv2.imread(original_image_path)\n","    original_image_rgb = cv2.cvtColor(original_image, cv2.COLOR_BGR2RGB)\n","\n","    # 회색 이미지 추출\n","    image_tensor = torchvision.transforms.functional.to_tensor(original_image_rgb).unsqueeze(0)\n","\n","    # 모델 예측 수행\n","    with torch.no_grad():\n","        prediction = model(image_tensor)[0]\n","\n","    # 결과 확인 (마스크와 클래스 ID 추출)\n","    masks = prediction['masks'].cpu().numpy()\n","    labels = prediction['labels'].cpu().numpy()\n","    scores = prediction['scores'].cpu().numpy()\n","\n","    # 클래스 ID가 1인 마스크 필터링 (예: 사람)\n","    person_mask = np.zeros((original_image_rgb.shape[0], original_image_rgb.shape[1]), dtype=np.uint8)\n","    for j in range(masks.shape[0]):\n","        if labels[j] == 1 and scores[j] > 0.5:  # 신뢰도가 0.5 이상인 경우만 사용\n","            person_mask = np.maximum(person_mask, masks[j, 0])\n","\n","    # 마스크 확장\n","    kernel = np.ones((30, 30), np.uint8)  # 커널 크기를 조정하여 확장 범위 조절\n","    dilated_mask = cv2.dilate(person_mask, kernel, iterations=1)\n","\n","    # 확장된 영역과 그 안에 모든 부분을 회색으로 채우기\n","    gray_color = (128, 128, 128)  # 회색 (808080)\n","    gray_image = np.full_like(original_image_rgb, gray_color, dtype=np.uint8)\n","\n","    gray_image_final = original_image_rgb.copy()\n","    gray_image_final[dilated_mask > 0.5] = gray_image[dilated_mask > 0.5]\n","\n","    # 얼굴 감지\n","    gray = cv2.cvtColor(original_image_rgb, cv2.COLOR_RGB2GRAY)\n","    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","    if len(faces) > 0:\n","        # 얼굴 위치가 가장 높은 것을 찾기\n","        highest_face = min(faces, key=lambda rect: rect[1])\n","        x, y, w, h = highest_face\n","\n","        # 얼굴 중심과 반경 설정\n","        center_x, center_y = x + w // 2, y + h // 2\n","\n","        # 너비와 높이에 각각 다른 배율 적용\n","        adjusted_w = int(1.8 * w)\n","        adjusted_h = int(1.2 * h)\n","\n","        # 타원형 마스크 생성\n","        mask = np.zeros_like(original_image_rgb)\n","        mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","        # 마스크 적용하여 얼굴 부분 추출\n","        face_circle = np.zeros_like(original_image_rgb)\n","        face_circle[mask[:, :, 0] == 255] = original_image_rgb[mask[:, :, 0] == 255]\n","\n","        # 중앙을 기준으로 윗부분과 얼굴 마스크 영역 원본 이미지 유지\n","        gray_image_final[:center_y, :] = original_image_rgb[:center_y, :]\n","        gray_image_final[mask[:, :, 0] == 255] = original_image_rgb[mask[:, :, 0] == 255]\n","\n","    # 결과 이미지 저장 (RGB 색상 공간으로 변환하여 저장)\n","    output_path = f'/content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/agnostic/{50000 + i}_00.jpg'\n","    cv2.imwrite(output_path, cv2.cvtColor(gray_image_final, cv2.COLOR_RGB2BGR))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_3LVEZ1Pk17G","executionInfo":{"status":"ok","timestamp":1718952140063,"user_tz":-540,"elapsed":3568689,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"b479c250-11b6-4fa8-dbe1-a80fb1dc24fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50075_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50104_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50107_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50110_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50147_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50155_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50159_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50173_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50175_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50183_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50226_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50268_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50278_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50329_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50358_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50413_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50414_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50432_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50464_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50501_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50542_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50543_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50544_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50545_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50546_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50547_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50548_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50549_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50550_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50551_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50552_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50553_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50554_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50555_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50556_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50557_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50558_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50559_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50560_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50561_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50562_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50563_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50564_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50565_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50566_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50567_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50568_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50569_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50570_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50571_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50572_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50573_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50574_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50575_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50576_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50577_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50578_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50579_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50580_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50581_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50582_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50583_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50584_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50585_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50586_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50587_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50588_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50589_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50590_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50591_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50592_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50593_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50594_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50595_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50596_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50597_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50598_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/kaggle-dress/image/50599_00.jpg does not exist.\n"]}]},{"cell_type":"markdown","source":["# 문제점\n","- 얼굴 두개 따질 때, 제일 처음 것만 얼굴이라 인식하게 수정\n","- 회색 부분이 잘 안따지는 것들이 있음... 다시 돌려보고 어떻게 할 건지 확인"],"metadata":{"id":"BFkokcx6P547"}},{"cell_type":"markdown","source":["# mask"],"metadata":{"id":"KX08vPOml4e_"}},{"cell_type":"code","source":["# Haar Cascade 분류기 파일 경로\n","face_cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'\n","\n","# Haar Cascade 분류기 로드\n","face_cascade = cv2.CascadeClassifier(face_cascade_path)\n","\n","for i in range(1, 50):\n","    # 기존 이미지 로드\n","    original_image_path = f'/content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/{100000 + i}_00.jpg'\n","\n","    # 이미지 파일이 존재하는지 확인\n","    if not os.path.exists(original_image_path):\n","        print(f\"File {original_image_path} does not exist.\")\n","        continue\n","\n","    original_image = cv2.imread(original_image_path)\n","    original_image_rgb = cv2.cvtColor(original_image, cv2.COLOR_BGR2RGB)\n","\n","    # 회색 이미지 추출\n","    image_tensor = torchvision.transforms.functional.to_tensor(original_image_rgb).unsqueeze(0)\n","\n","    # 모델 예측 수행\n","    with torch.no_grad():\n","        prediction = model(image_tensor)[0]\n","\n","    # 결과 확인 (마스크와 클래스 ID 추출)\n","    masks = prediction['masks'].cpu().numpy()\n","    labels = prediction['labels'].cpu().numpy()\n","    scores = prediction['scores'].cpu().numpy()\n","\n","    # 클래스 ID가 1인 마스크 필터링 (예: 사람)\n","    person_mask = np.zeros((original_image_rgb.shape[0], original_image_rgb.shape[1]), dtype=np.uint8)\n","    for j in range(masks.shape[0]):\n","        if labels[j] == 1 and scores[j] > 0.5:  # 신뢰도가 0.5 이상인 경우만 사용\n","            person_mask = np.maximum(person_mask, masks[j, 0])\n","\n","    # 마스크 확장\n","    kernel = np.ones((30, 30), np.uint8)  # 커널 크기를 조정하여 확장 범위 조절\n","    dilated_mask = cv2.dilate(person_mask, kernel, iterations=1)\n","\n","    # 하얀색과 검정색 정의\n","    white_color = (255, 255, 255)  # 하얀색\n","    black_color = (0, 0, 0)  # 검정색\n","\n","    # 모든 영역을 검정색으로 채우기\n","    processed_image = np.full_like(original_image_rgb, black_color, dtype=np.uint8)\n","\n","    # 확장된 영역을 하얀색으로 채우기\n","    processed_image[dilated_mask > 0.5] = white_color\n","\n","    # 얼굴 감지\n","    gray = cv2.cvtColor(original_image_rgb, cv2.COLOR_RGB2GRAY)\n","    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))\n","\n","    if len(faces) > 0:\n","        # 얼굴 위치가 가장 높은 것을 찾기\n","        highest_face = min(faces, key=lambda rect: rect[1])\n","        x, y, w, h = highest_face\n","\n","        # 얼굴 중심과 반경 설정\n","        center_x, center_y = x + w // 2, y + h // 2\n","\n","        # 너비와 높이에 각각 다른 배율 적용\n","        adjusted_w = int(1.8 * w)\n","        adjusted_h = int(1.2 * h)\n","\n","        # 타원형 마스크 생성\n","        mask = np.zeros_like(original_image_rgb)\n","        mask = cv2.ellipse(mask, (center_x, center_y), (adjusted_w // 2, adjusted_h // 2), 0, 0, 360, (255, 255, 255), -1)\n","\n","        # 얼굴 마스크 영역을 검정으로 채우기\n","        processed_image[mask[:, :, 0] == 255] = black_color\n","\n","        # 중앙을 기준으로 윗부분을 검정으로 채우기\n","        processed_image[:center_y, :] = black_color\n","\n","    # 결과 이미지 저장 (RGB 색상 공간으로 변환하여 저장)\n","    output_path = f'/content/drive/MyDrive/DLproject/wedding_dress/mini_dress/agnostic-mask/{100000 + i}_00.jpg'\n","    cv2.imwrite(output_path, cv2.cvtColor(processed_image, cv2.COLOR_RGB2BGR))"],"metadata":{"id":"CQqvre-oQEW1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718937163653,"user_tz":-540,"elapsed":315137,"user":{"displayName":"하영","userId":"04964532053025819929"}},"outputId":"aa708300-67a9-460a-9d16-7c07dccfe19b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100041_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100042_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100043_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100044_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100045_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100046_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100047_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100048_00.jpg does not exist.\n","File /content/drive/MyDrive/DLproject/wedding_dress/mini_dress/image/100049_00.jpg does not exist.\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"14RndnaWm3j4"},"execution_count":null,"outputs":[]}]}